name: DAST Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Her gün 02:00'da çalıştır
    - cron: '0 2 * * *'

jobs:
  dast-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: Backend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd Backend
        npm ci
        
    - name: Start application
      run: |
        cd Backend
        npm run start &
        sleep 30
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://test:test@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        JWT_ACCESS_SECRET: test_secret
        JWT_REFRESH_SECRET: test_refresh_secret
        PEPPER: test_pepper_at_least_32_chars_long
        
    - name: Wait for application
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:5001/healthz; do sleep 2; done'
        
    - name: Run OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: 'http://localhost:5001'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
        
    - name: Upload ZAP results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-results
        path: |
          report_html.html
          report_json.json
          report_md.md
          
    - name: Check for High severity issues
      run: |
        if [ -f report_json.json ]; then
          HIGH_ISSUES=$(jq '.High | length' report_json.json)
          if [ "$HIGH_ISSUES" -gt 0 ]; then
            echo "❌ Found $HIGH_ISSUES high severity security issues"
            echo "High severity issues:"
            jq -r '.High[] | "- " + .name + ": " + .description' report_json.json
            exit 1
          else
            echo "✅ No high severity security issues found"
          fi
        else
          echo "⚠️  ZAP report not found"
        fi
        
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let comment = '## 🔒 DAST Security Scan Results\n\n';
          
          try {
            if (fs.existsSync('report_json.json')) {
              const report = JSON.parse(fs.readFileSync('report_json.json', 'utf8'));
              
              const highCount = report.High ? report.High.length : 0;
              const mediumCount = report.Medium ? report.Medium.length : 0;
              const lowCount = report.Low ? report.Low.length : 0;
              const infoCount = report.Informational ? report.Informational.length : 0;
              
              comment += `| Severity | Count |\n`;
              comment += `|----------|-------|\n`;
              comment += `| 🔴 High | ${highCount} |\n`;
              comment += `| 🟡 Medium | ${mediumCount} |\n`;
              comment += `| 🟠 Low | ${lowCount} |\n`;
              comment += `| ℹ️ Info | ${infoCount} |\n\n`;
              
              if (highCount > 0) {
                comment += `### 🔴 High Severity Issues\n\n`;
                report.High.forEach(issue => {
                  comment += `- **${issue.name}**: ${issue.description}\n`;
                });
                comment += '\n';
              }
              
              if (mediumCount > 0) {
                comment += `### 🟡 Medium Severity Issues\n\n`;
                report.Medium.slice(0, 5).forEach(issue => {
                  comment += `- **${issue.name}**: ${issue.description}\n`;
                });
                if (mediumCount > 5) {
                  comment += `- ... and ${mediumCount - 5} more\n`;
                }
                comment += '\n';
              }
              
              comment += `📊 [Full Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;
            } else {
              comment += '⚠️ Security scan report not available';
            }
          } catch (error) {
            comment += `❌ Error processing security scan results: ${error.message}`;
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Stop application
      if: always()
      run: |
        pkill -f "node.*server.js" || true
        
  security-summary:
    runs-on: ubuntu-latest
    needs: dast-scan
    if: always()
    
    steps:
    - name: Download ZAP results
      uses: actions/download-artifact@v4
      with:
        name: zap-results
        
    - name: Generate security summary
      run: |
        echo "# Security Scan Summary" > security-summary.md
        echo "" >> security-summary.md
        echo "**Scan Date:** $(date)" >> security-summary.md
        echo "**Branch:** ${{ github.ref_name }}" >> security-summary.md
        echo "**Commit:** ${{ github.sha }}" >> security-summary.md
        echo "" >> security-summary.md
        
        if [ -f report_json.json ]; then
          HIGH_ISSUES=$(jq '.High | length' report_json.json)
          MEDIUM_ISSUES=$(jq '.Medium | length' report_json.json)
          LOW_ISSUES=$(jq '.Low | length' report_json.json)
          
          echo "## Results" >> security-summary.md
          echo "- High Severity: $HIGH_ISSUES" >> security-summary.md
          echo "- Medium Severity: $MEDIUM_ISSUES" >> security-summary.md
          echo "- Low Severity: $LOW_ISSUES" >> security-summary.md
          
          if [ "$HIGH_ISSUES" -gt 0 ]; then
            echo "" >> security-summary.md
            echo "## ⚠️ High Severity Issues Found" >> security-summary.md
            jq -r '.High[] | "- " + .name + ": " + .description' report_json.json >> security-summary.md
          fi
        else
          echo "## ❌ Scan Failed" >> security-summary.md
          echo "Unable to generate security report" >> security-summary.md
        fi
        
    - name: Upload security summary
      uses: actions/upload-artifact@v4
      with:
        name: security-summary
        path: security-summary.md
